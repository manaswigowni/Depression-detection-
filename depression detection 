{"cells":[{"cell_type":"markdown","source":["## **NLP Assignment 2**\n","\n","Done by\n","\n","160121733162\n","\n","160121733163\n","\n","160121733164"],"metadata":{"id":"iA7o9LI31fGo"},"id":"iA7o9LI31fGo"},{"cell_type":"markdown","source":["## ***Problem Statement***\n","\n","This project aims to develop a Natural Language Processing model for detecting indicators of depression in social media content. By analyzing text data from various social media platforms, the model will identify linguistic patterns, sentiment expressions, and contextual cues associated with depressive symptoms.  The main aim is to make a system that can alert when someone might need help, so we can reach out to them."],"metadata":{"id":"zS-b40v41PYI"},"id":"zS-b40v41PYI"},{"cell_type":"code","execution_count":null,"id":"b26a683e","metadata":{"id":"b26a683e"},"outputs":[],"source":["import numpy as np\n","import pandas as pd\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import accuracy_score\n","from sklearn.feature_extraction.text import TfidfVectorizer\n","from sklearn.naive_bayes import MultinomialNB\n","from sklearn.pipeline import make_pipeline\n","import seaborn as sns\n","import string\n","import nltk\n","import re"]},{"cell_type":"code","execution_count":null,"id":"fc590f26","metadata":{"id":"fc590f26"},"outputs":[],"source":["dataset_columns = [\"target\", \"ids\", \"date\", \"flag\", \"user\", \"text\"]\n","dataset_encode = \"ISO-8859-1\"\n","df=pd.read_csv(\"/content/training.1600000.processed.noemoticon (1).csv\", encoding = dataset_encode,names=dataset_columns)"]},{"cell_type":"code","execution_count":null,"id":"78992e90","metadata":{"id":"78992e90","outputId":"3349944b-a7a7-4f43-c376-b3c7995cc279","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1715574007727,"user_tz":-330,"elapsed":889,"user":{"displayName":"Meghanath Reddy","userId":"06964579161220945752"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   target         ids                          date      flag  \\\n","0       0  1467810369  Mon Apr 06 22:19:45 PDT 2009  NO_QUERY   \n","1       0  1467810672  Mon Apr 06 22:19:49 PDT 2009  NO_QUERY   \n","2       0  1467810917  Mon Apr 06 22:19:53 PDT 2009  NO_QUERY   \n","3       0  1467811184  Mon Apr 06 22:19:57 PDT 2009  NO_QUERY   \n","4       0  1467811193  Mon Apr 06 22:19:57 PDT 2009  NO_QUERY   \n","\n","              user                                               text  \n","0  _TheSpecialOne_  @switchfoot http://twitpic.com/2y1zl - Awww, t...  \n","1    scotthamilton  is upset that he can't update his Facebook by ...  \n","2         mattycus  @Kenichan I dived many times for the ball. Man...  \n","3          ElleCTF    my whole body feels itchy and like its on fire   \n","4           Karoli  @nationwideclass no, it's not behaving at all....  "],"text/html":["\n","  <div id=\"df-35eb9833-1fec-44f5-a956-51fd4833657b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>target</th>\n","      <th>ids</th>\n","      <th>date</th>\n","      <th>flag</th>\n","      <th>user</th>\n","      <th>text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>1467810369</td>\n","      <td>Mon Apr 06 22:19:45 PDT 2009</td>\n","      <td>NO_QUERY</td>\n","      <td>_TheSpecialOne_</td>\n","      <td>@switchfoot http://twitpic.com/2y1zl - Awww, t...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>1467810672</td>\n","      <td>Mon Apr 06 22:19:49 PDT 2009</td>\n","      <td>NO_QUERY</td>\n","      <td>scotthamilton</td>\n","      <td>is upset that he can't update his Facebook by ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>1467810917</td>\n","      <td>Mon Apr 06 22:19:53 PDT 2009</td>\n","      <td>NO_QUERY</td>\n","      <td>mattycus</td>\n","      <td>@Kenichan I dived many times for the ball. Man...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>1467811184</td>\n","      <td>Mon Apr 06 22:19:57 PDT 2009</td>\n","      <td>NO_QUERY</td>\n","      <td>ElleCTF</td>\n","      <td>my whole body feels itchy and like its on fire</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>1467811193</td>\n","      <td>Mon Apr 06 22:19:57 PDT 2009</td>\n","      <td>NO_QUERY</td>\n","      <td>Karoli</td>\n","      <td>@nationwideclass no, it's not behaving at all....</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-35eb9833-1fec-44f5-a956-51fd4833657b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-35eb9833-1fec-44f5-a956-51fd4833657b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-35eb9833-1fec-44f5-a956-51fd4833657b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9da41b95-a7c2-4bdd-bd40-43ceeceb8736\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9da41b95-a7c2-4bdd-bd40-43ceeceb8736')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9da41b95-a7c2-4bdd-bd40-43ceeceb8736 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 20000,\n  \"fields\": [\n    {\n      \"column\": \"target\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          4,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ids\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 356596865,\n        \"min\": 1467810369,\n        \"max\": 2193602129,\n        \"num_unique_values\": 20000,\n        \"samples\": [\n          2191434431,\n          1468290988\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 11363,\n        \"samples\": [\n          \"Mon Apr 06 22:27:22 PDT 2009\",\n          \"Tue Apr 07 04:26:22 PDT 2009\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"flag\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"NO_QUERY\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"user\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 18105,\n        \"samples\": [\n          \"1SEJAL1\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 19953,\n        \"samples\": [\n          \"Why amen't I eating proper food? I feel ill now \"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":58}],"source":["df.head()"]},{"cell_type":"code","execution_count":null,"id":"dc4f9c37","metadata":{"id":"dc4f9c37"},"outputs":[],"source":["df.drop(['ids','date','flag','user'],axis = 1,inplace = True)\n","#axis=1 means columns deleted\n","#inplace true means data gets modified and copied to dataframe itself."]},{"cell_type":"code","execution_count":null,"id":"efb63e0d","metadata":{"id":"efb63e0d","outputId":"f0badd51-1a0d-426f-d4ec-8a2d914b5fec","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1715667142153,"user_tz":-330,"elapsed":3,"user":{"displayName":"Meghanath Reddy","userId":"06964579161220945752"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["target\n","4    10001\n","0     9999\n","Name: count, dtype: int64"]},"metadata":{},"execution_count":6}],"source":["df['target'].value_counts()"]},{"cell_type":"code","execution_count":null,"id":"61e7efbf","metadata":{"id":"61e7efbf","outputId":"212d6cba-d11d-40db-ef66-a815d34add0e","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1715667144085,"user_tz":-330,"elapsed":896,"user":{"displayName":"Meghanath Reddy","userId":"06964579161220945752"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   target                                               text  \\\n","0       0  @switchfoot http://twitpic.com/2y1zl - Awww, t...   \n","1       0  is upset that he can't update his Facebook by ...   \n","2       0  @Kenichan I dived many times for the ball. Man...   \n","3       0    my whole body feels itchy and like its on fire    \n","4       0  @nationwideclass no, it's not behaving at all....   \n","\n","                                          clean_text  \n","0  switchfoot httptwitpiccom2y1zl  Awww thats a b...  \n","1  is upset that he cant update his Facebook by t...  \n","2  Kenichan I dived many times for the ball Manag...  \n","3    my whole body feels itchy and like its on fire   \n","4  nationwideclass no its not behaving at all im ...  "],"text/html":["\n","  <div id=\"df-d56f9d82-fda7-4051-b30f-24d1754d2654\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>target</th>\n","      <th>text</th>\n","      <th>clean_text</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>@switchfoot http://twitpic.com/2y1zl - Awww, t...</td>\n","      <td>switchfoot httptwitpiccom2y1zl  Awww thats a b...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>is upset that he can't update his Facebook by ...</td>\n","      <td>is upset that he cant update his Facebook by t...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>@Kenichan I dived many times for the ball. Man...</td>\n","      <td>Kenichan I dived many times for the ball Manag...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>my whole body feels itchy and like its on fire</td>\n","      <td>my whole body feels itchy and like its on fire</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>@nationwideclass no, it's not behaving at all....</td>\n","      <td>nationwideclass no its not behaving at all im ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d56f9d82-fda7-4051-b30f-24d1754d2654')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d56f9d82-fda7-4051-b30f-24d1754d2654 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d56f9d82-fda7-4051-b30f-24d1754d2654');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-c073f4c5-2726-4395-8786-49ba50b6e3cf\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-c073f4c5-2726-4395-8786-49ba50b6e3cf')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-c073f4c5-2726-4395-8786-49ba50b6e3cf button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 20000,\n  \"fields\": [\n    {\n      \"column\": \"target\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          4,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 19953,\n        \"samples\": [\n          \"Why amen't I eating proper food? I feel ill now \",\n          \"@rollingcherry Welcome back \"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"clean_text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 19937,\n        \"samples\": [\n          \"talking with Dad and Mom  skype \",\n          \"thanks for the life time suply of Rum Balls Sam Love you \"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}],"source":["#remove punctuation\n","def remove_punctuation(text):\n","    no_punct=[words for words in text if words not in string.punctuation]\n","    words_wo_punct=''.join(no_punct)\n","    return words_wo_punct\n","df['clean_text']=df['text'].apply(lambda x: remove_punctuation(x))\n","df.head()"]},{"cell_type":"code","execution_count":null,"id":"9caca4ea","metadata":{"id":"9caca4ea","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1715667147765,"user_tz":-330,"elapsed":1047,"user":{"displayName":"Meghanath Reddy","userId":"06964579161220945752"}},"outputId":"488f2c57-4e6a-4622-cfc3-8be629c1b4dd"},"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package punkt to /root/nltk_data...\n","[nltk_data]   Unzipping tokenizers/punkt.zip.\n"]}],"source":["#tokenization\n","nltk.download('punkt')\n","def tokenize(text):\n","    split=re.split(\"\\W+\",text)\n","    return split\n","df['clean_text_tokenize']=df['clean_text'].apply(lambda x: tokenize(x.lower()))\n"]},{"cell_type":"code","source":["df['clean_text_tokenize']"],"metadata":{"id":"K95g99Hz93Xx","executionInfo":{"status":"ok","timestamp":1715667151901,"user_tz":-330,"elapsed":599,"user":{"displayName":"Meghanath Reddy","userId":"06964579161220945752"}},"outputId":"6ecc655a-dffa-4ef4-ef6a-7b8afeb6235a","colab":{"base_uri":"https://localhost:8080/"}},"id":"K95g99Hz93Xx","execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0        [switchfoot, httptwitpiccom2y1zl, awww, thats,...\n","1        [is, upset, that, he, cant, update, his, faceb...\n","2        [kenichan, i, dived, many, times, for, the, ba...\n","3        [my, whole, body, feels, itchy, and, like, its...\n","4        [nationwideclass, no, its, not, behaving, at, ...\n","                               ...                        \n","19995    [just, woke, up, having, no, school, is, the, ...\n","19996    [thewdbcom, very, cool, to, hear, old, walt, i...\n","19997    [are, you, ready, for, your, mojo, makeover, a...\n","19998    [happy, 38th, birthday, to, my, boo, of, alll,...\n","19999    [happy, charitytuesday, thenspcc, sparkscharit...\n","Name: clean_text_tokenize, Length: 20000, dtype: object"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","execution_count":null,"id":"e7eeca42","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"e7eeca42","executionInfo":{"status":"ok","timestamp":1715667154358,"user_tz":-330,"elapsed":483,"user":{"displayName":"Meghanath Reddy","userId":"06964579161220945752"}},"outputId":"c5ddd914-2fa6-48aa-8f9d-1c0c5ab69be3"},"outputs":[{"output_type":"stream","name":"stderr","text":["[nltk_data] Downloading package stopwords to /root/nltk_data...\n","[nltk_data]   Unzipping corpora/stopwords.zip.\n"]},{"output_type":"execute_result","data":{"text/plain":["['i',\n"," 'me',\n"," 'my',\n"," 'myself',\n"," 'we',\n"," 'our',\n"," 'ours',\n"," 'ourselves',\n"," 'you',\n"," \"you're\",\n"," \"you've\",\n"," \"you'll\",\n"," \"you'd\",\n"," 'your',\n"," 'yours',\n"," 'yourself',\n"," 'yourselves',\n"," 'he',\n"," 'him',\n"," 'his',\n"," 'himself',\n"," 'she',\n"," \"she's\",\n"," 'her',\n"," 'hers',\n"," 'herself',\n"," 'it',\n"," \"it's\",\n"," 'its',\n"," 'itself',\n"," 'they',\n"," 'them',\n"," 'their',\n"," 'theirs',\n"," 'themselves',\n"," 'what',\n"," 'which',\n"," 'who',\n"," 'whom',\n"," 'this',\n"," 'that',\n"," \"that'll\",\n"," 'these',\n"," 'those',\n"," 'am',\n"," 'is',\n"," 'are',\n"," 'was',\n"," 'were',\n"," 'be',\n"," 'been',\n"," 'being',\n"," 'have',\n"," 'has',\n"," 'had',\n"," 'having',\n"," 'do',\n"," 'does',\n"," 'did',\n"," 'doing',\n"," 'a',\n"," 'an',\n"," 'the',\n"," 'and',\n"," 'but',\n"," 'if',\n"," 'or',\n"," 'because',\n"," 'as',\n"," 'until',\n"," 'while',\n"," 'of',\n"," 'at',\n"," 'by',\n"," 'for',\n"," 'with',\n"," 'about',\n"," 'against',\n"," 'between',\n"," 'into',\n"," 'through',\n"," 'during',\n"," 'before',\n"," 'after',\n"," 'above',\n"," 'below',\n"," 'to',\n"," 'from',\n"," 'up',\n"," 'down',\n"," 'in',\n"," 'out',\n"," 'on',\n"," 'off',\n"," 'over',\n"," 'under',\n"," 'again',\n"," 'further',\n"," 'then',\n"," 'once',\n"," 'here',\n"," 'there',\n"," 'when',\n"," 'where',\n"," 'why',\n"," 'how',\n"," 'all',\n"," 'any',\n"," 'both',\n"," 'each',\n"," 'few',\n"," 'more',\n"," 'most',\n"," 'other',\n"," 'some',\n"," 'such',\n"," 'no',\n"," 'nor',\n"," 'not',\n"," 'only',\n"," 'own',\n"," 'same',\n"," 'so',\n"," 'than',\n"," 'too',\n"," 'very',\n"," 's',\n"," 't',\n"," 'can',\n"," 'will',\n"," 'just',\n"," 'don',\n"," \"don't\",\n"," 'should',\n"," \"should've\",\n"," 'now',\n"," 'd',\n"," 'll',\n"," 'm',\n"," 'o',\n"," 're',\n"," 've',\n"," 'y',\n"," 'ain',\n"," 'aren',\n"," \"aren't\",\n"," 'couldn',\n"," \"couldn't\",\n"," 'didn',\n"," \"didn't\",\n"," 'doesn',\n"," \"doesn't\",\n"," 'hadn',\n"," \"hadn't\",\n"," 'hasn',\n"," \"hasn't\",\n"," 'haven',\n"," \"haven't\",\n"," 'isn',\n"," \"isn't\",\n"," 'ma',\n"," 'mightn',\n"," \"mightn't\",\n"," 'mustn',\n"," \"mustn't\",\n"," 'needn',\n"," \"needn't\",\n"," 'shan',\n"," \"shan't\",\n"," 'shouldn',\n"," \"shouldn't\",\n"," 'wasn',\n"," \"wasn't\",\n"," 'weren',\n"," \"weren't\",\n"," 'won',\n"," \"won't\",\n"," 'wouldn',\n"," \"wouldn't\"]"]},"metadata":{},"execution_count":10}],"source":["import nltk\n","\n","nltk.download('stopwords')\n","\n","from nltk.corpus import stopwords\n","\n","stopwords.words('english')"]},{"cell_type":"code","execution_count":null,"id":"c0ee2e2f","metadata":{"id":"c0ee2e2f","outputId":"06761d84-eacc-4d45-e870-537ded24fb05","colab":{"base_uri":"https://localhost:8080/","height":363},"executionInfo":{"status":"ok","timestamp":1715667161345,"user_tz":-330,"elapsed":1940,"user":{"displayName":"Meghanath Reddy","userId":"06964579161220945752"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["   target                                               text  \\\n","0       0  @switchfoot http://twitpic.com/2y1zl - Awww, t...   \n","1       0  is upset that he can't update his Facebook by ...   \n","2       0  @Kenichan I dived many times for the ball. Man...   \n","3       0    my whole body feels itchy and like its on fire    \n","4       0  @nationwideclass no, it's not behaving at all....   \n","5       0                      @Kwesidei not the whole crew    \n","6       0                                        Need a hug    \n","7       0  @LOLTrish hey  long time no see! Yes.. Rains a...   \n","8       0               @Tatiana_K nope they didn't have it    \n","9       0                          @twittera que me muera ?    \n","\n","                                          clean_text  \\\n","0  switchfoot httptwitpiccom2y1zl  Awww thats a b...   \n","1  is upset that he cant update his Facebook by t...   \n","2  Kenichan I dived many times for the ball Manag...   \n","3    my whole body feels itchy and like its on fire    \n","4  nationwideclass no its not behaving at all im ...   \n","5                       Kwesidei not the whole crew    \n","6                                        Need a hug    \n","7  LOLTrish hey  long time no see Yes Rains a bit...   \n","8                  TatianaK nope they didnt have it    \n","9                            twittera que me muera     \n","\n","                                 clean_text_tokenize  \\\n","0  [switchfoot, httptwitpiccom2y1zl, awww, thats,...   \n","1  [is, upset, that, he, cant, update, his, faceb...   \n","2  [kenichan, i, dived, many, times, for, the, ba...   \n","3  [my, whole, body, feels, itchy, and, like, its...   \n","4  [nationwideclass, no, its, not, behaving, at, ...   \n","5                [kwesidei, not, the, whole, crew, ]   \n","6                                   [need, a, hug, ]   \n","7  [loltrish, hey, long, time, no, see, yes, rain...   \n","8          [tatianak, nope, they, didnt, have, it, ]   \n","9                       [twittera, que, me, muera, ]   \n","\n","                       clean_text_tokenize_stopwords  \n","0  [switchfoot, httptwitpiccom2y1zl, awww, thats,...  \n","1  [upset, cant, update, facebook, texting, might...  \n","2  [kenichan, dived, many, times, ball, managed, ...  \n","3          [whole, body, feels, itchy, like, fire, ]  \n","4  [nationwideclass, behaving, im, mad, cant, see, ]  \n","5                          [kwesidei, whole, crew, ]  \n","6                                      [need, hug, ]  \n","7  [loltrish, hey, long, time, see, yes, rains, b...  \n","8                          [tatianak, nope, didnt, ]  \n","9                           [twittera, que, muera, ]  "],"text/html":["\n","  <div id=\"df-561b206b-446c-4001-abde-7206ee9e6fa4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>target</th>\n","      <th>text</th>\n","      <th>clean_text</th>\n","      <th>clean_text_tokenize</th>\n","      <th>clean_text_tokenize_stopwords</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>@switchfoot http://twitpic.com/2y1zl - Awww, t...</td>\n","      <td>switchfoot httptwitpiccom2y1zl  Awww thats a b...</td>\n","      <td>[switchfoot, httptwitpiccom2y1zl, awww, thats,...</td>\n","      <td>[switchfoot, httptwitpiccom2y1zl, awww, thats,...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>is upset that he can't update his Facebook by ...</td>\n","      <td>is upset that he cant update his Facebook by t...</td>\n","      <td>[is, upset, that, he, cant, update, his, faceb...</td>\n","      <td>[upset, cant, update, facebook, texting, might...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>@Kenichan I dived many times for the ball. Man...</td>\n","      <td>Kenichan I dived many times for the ball Manag...</td>\n","      <td>[kenichan, i, dived, many, times, for, the, ba...</td>\n","      <td>[kenichan, dived, many, times, ball, managed, ...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>my whole body feels itchy and like its on fire</td>\n","      <td>my whole body feels itchy and like its on fire</td>\n","      <td>[my, whole, body, feels, itchy, and, like, its...</td>\n","      <td>[whole, body, feels, itchy, like, fire, ]</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>@nationwideclass no, it's not behaving at all....</td>\n","      <td>nationwideclass no its not behaving at all im ...</td>\n","      <td>[nationwideclass, no, its, not, behaving, at, ...</td>\n","      <td>[nationwideclass, behaving, im, mad, cant, see, ]</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>0</td>\n","      <td>@Kwesidei not the whole crew</td>\n","      <td>Kwesidei not the whole crew</td>\n","      <td>[kwesidei, not, the, whole, crew, ]</td>\n","      <td>[kwesidei, whole, crew, ]</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>0</td>\n","      <td>Need a hug</td>\n","      <td>Need a hug</td>\n","      <td>[need, a, hug, ]</td>\n","      <td>[need, hug, ]</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0</td>\n","      <td>@LOLTrish hey  long time no see! Yes.. Rains a...</td>\n","      <td>LOLTrish hey  long time no see Yes Rains a bit...</td>\n","      <td>[loltrish, hey, long, time, no, see, yes, rain...</td>\n","      <td>[loltrish, hey, long, time, see, yes, rains, b...</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>0</td>\n","      <td>@Tatiana_K nope they didn't have it</td>\n","      <td>TatianaK nope they didnt have it</td>\n","      <td>[tatianak, nope, they, didnt, have, it, ]</td>\n","      <td>[tatianak, nope, didnt, ]</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>0</td>\n","      <td>@twittera que me muera ?</td>\n","      <td>twittera que me muera</td>\n","      <td>[twittera, que, me, muera, ]</td>\n","      <td>[twittera, que, muera, ]</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-561b206b-446c-4001-abde-7206ee9e6fa4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-561b206b-446c-4001-abde-7206ee9e6fa4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-561b206b-446c-4001-abde-7206ee9e6fa4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-60e3b550-80e3-45e7-bc29-c03b63500dbf\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-60e3b550-80e3-45e7-bc29-c03b63500dbf')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-60e3b550-80e3-45e7-bc29-c03b63500dbf button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 20000,\n  \"fields\": [\n    {\n      \"column\": \"target\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          4,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 19953,\n        \"samples\": [\n          \"Why amen't I eating proper food? I feel ill now \",\n          \"@rollingcherry Welcome back \"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"clean_text\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 19937,\n        \"samples\": [\n          \"talking with Dad and Mom  skype \",\n          \"thanks for the life time suply of Rum Balls Sam Love you \"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"clean_text_tokenize\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"clean_text_tokenize_stopwords\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":11}],"source":["#in this code stopwords are removed\n","stopword = nltk.corpus.stopwords.words('english')\n","def remove_stopwords(text):\n","    text=[word for word in text if word not in stopword]\n","    return text\n","df['clean_text_tokenize_stopwords'] = df['clean_text_tokenize'].apply(lambda x: remove_stopwords(x))\n","df.head(10)"]},{"cell_type":"code","execution_count":null,"id":"f89750d0","metadata":{"id":"f89750d0"},"outputs":[],"source":["new_df = pd.DataFrame()\n","new_df['text'] = df['clean_text']\n","new_df['label'] = df['target']\n","new_df['label'] = new_df['label'].replace(4,1)"]},{"cell_type":"code","execution_count":null,"id":"56ea72ba","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"56ea72ba","outputId":"312ffac7-f71c-449d-cc25-ff178aaec987","executionInfo":{"status":"ok","timestamp":1715667166474,"user_tz":-330,"elapsed":2,"user":{"displayName":"Meghanath Reddy","userId":"06964579161220945752"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["                                                text  label\n","0  switchfoot httptwitpiccom2y1zl  Awww thats a b...      0\n","1  is upset that he cant update his Facebook by t...      0\n","2  Kenichan I dived many times for the ball Manag...      0\n","3    my whole body feels itchy and like its on fire       0\n","4  nationwideclass no its not behaving at all im ...      0\n","Label: \n"," label\n","1    10001\n","0     9999\n","Name: count, dtype: int64\n"]}],"source":["print(new_df.head())\n","print('Label: \\n', new_df['label'].value_counts())"]},{"cell_type":"code","execution_count":null,"id":"P3VPpOUZWMWb","metadata":{"id":"P3VPpOUZWMWb","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1715667174623,"user_tz":-330,"elapsed":590,"user":{"displayName":"Meghanath Reddy","userId":"06964579161220945752"}},"outputId":"2d1cbff3-4656-46bd-fae3-14c4c25efa0f"},"outputs":[{"output_type":"stream","name":"stdout","text":["(16000,) (4000,) (16000,) (4000,)\n"]}],"source":["from sklearn.model_selection import train_test_split\n","X = new_df['text']\n","y = new_df['label']\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)\n","\n","print(X_train.shape,X_test.shape,y_train.shape,y_test.shape)"]},{"cell_type":"code","execution_count":null,"id":"wmR_es3vWr8K","metadata":{"id":"wmR_es3vWr8K","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1715667176591,"user_tz":-330,"elapsed":4,"user":{"displayName":"Meghanath Reddy","userId":"06964579161220945752"}},"outputId":"353f934c-8bf8-48b8-ea42-4b816b5c1dd0"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["label\n","1    8019\n","0    7981\n","Name: count, dtype: int64"]},"metadata":{},"execution_count":16}],"source":["y_train.value_counts()"]},{"cell_type":"markdown","source":["## ***LogisticRegression***"],"metadata":{"id":"bW2EBe4XSazO"},"id":"bW2EBe4XSazO"},{"cell_type":"code","source":["from sklearn.feature_extraction.text import TfidfVectorizer\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import accuracy_score, classification_report\n","\n","# Create a TF-IDF vectorizer to convert text data into numerical features\n","vectorizer = TfidfVectorizer()\n","X_train_vectorized = vectorizer.fit_transform(X_train)\n","X_test_vectorized = vectorizer.transform(X_test)\n","\n","# Initialize and train the logistic regression classifier\n","classifier = LogisticRegression()\n","classifier.fit(X_train_vectorized, y_train)\n","\n","# Predict labels for the test set\n","predictions = classifier.predict(X_test_vectorized)\n","\n","# Evaluate the model\n","accuracy = accuracy_score(y_test, predictions)\n","print(\"Accuracy:\", accuracy)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XMN2f74XSMbY","executionInfo":{"status":"ok","timestamp":1715667180377,"user_tz":-330,"elapsed":1095,"user":{"displayName":"Meghanath Reddy","userId":"06964579161220945752"}},"outputId":"9f22e830-728e-483b-8092-fa635f58dc6d"},"id":"XMN2f74XSMbY","execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.76975\n"]}]},{"cell_type":"markdown","source":["## ***Bernoulli Naive Bayes***"],"metadata":{"id":"a44dFBXZR8ye"},"id":"a44dFBXZR8ye"},{"cell_type":"code","source":["from sklearn.feature_extraction.text import CountVectorizer\n","from sklearn.naive_bayes import BernoulliNB\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import accuracy_score, classification_report"],"metadata":{"id":"4xnig2LDRbmO"},"id":"4xnig2LDRbmO","execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Create a CountVectorizer to convert text data into binary features\n","vectorizer = CountVectorizer(binary=True)\n","X_train_vectorized = vectorizer.fit_transform(X_train)\n","X_test_vectorized = vectorizer.transform(X_test)\n","\n","# Initialize and train the Bernoulli Naive Bayes classifier\n","classifier = BernoulliNB()\n","classifier.fit(X_train_vectorized, y_train)\n","\n","# Predict labels for the test set\n","predictions = classifier.predict(X_test_vectorized)\n","\n","# Evaluate the model\n","accuracy = accuracy_score(y_test, predictions)\n","print(\"Accuracy:\", accuracy)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EPN3Lz08RZ8v","executionInfo":{"status":"ok","timestamp":1715667183376,"user_tz":-330,"elapsed":2,"user":{"displayName":"Meghanath Reddy","userId":"06964579161220945752"}},"outputId":"4bc29aad-4004-4452-ef88-2330b4bb2e47"},"id":"EPN3Lz08RZ8v","execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.774\n"]}]},{"cell_type":"markdown","source":["## ***MultinomialNB***"],"metadata":{"id":"1JQNsAUQSHz2"},"id":"1JQNsAUQSHz2"},{"cell_type":"code","execution_count":null,"id":"RyWAzraSWsDR","metadata":{"id":"RyWAzraSWsDR","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1715667185667,"user_tz":-330,"elapsed":903,"user":{"displayName":"Meghanath Reddy","userId":"06964579161220945752"}},"outputId":"5adad08c-175d-478a-8374-28b021fadf4f"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.913375"]},"metadata":{},"execution_count":20}],"source":["model = make_pipeline(TfidfVectorizer(), MultinomialNB())\n","model.fit(X_train,y_train)\n","validation1 = model.predict(X_train)\n","accuracy_score(y_train, validation1)\n","# MultinomialNB: Typically used for text classification tasks where features represent word counts or TF-IDF values."]},{"cell_type":"markdown","source":["## ***Evalution Metrics***"],"metadata":{"id":"BLXhKqX3u7cN"},"id":"BLXhKqX3u7cN"},{"cell_type":"code","source":["from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score, roc_curve, auc, confusion_matrix\n","import matplotlib.pyplot as plt\n","\n","# Example true labels and predicted labels\n","true_labels = y_train\n","predicted_labels = validation1\n","# Accuracy\n","accuracy = accuracy_score(true_labels, predicted_labels)\n","print(\"Accuracy:\", accuracy)\n","# Precision\n","precision = precision_score(true_labels, predicted_labels)\n","print(\"Precision:\", precision)\n","# Recall\n","recall = recall_score(true_labels, predicted_labels)\n","print(\"Recall:\", recall)\n","# F1 Score\n","f1 = f1_score(true_labels, predicted_labels)\n","print(\"F1 Score:\", f1)\n","\n","# Confusion Matrix\n","conf_matrix = confusion_matrix(true_labels, predicted_labels)\n","print(\"Confusion Matrix:\")\n","print(conf_matrix)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QRnxIb6du6xN","executionInfo":{"status":"ok","timestamp":1715667224338,"user_tz":-330,"elapsed":2,"user":{"displayName":"Meghanath Reddy","userId":"06964579161220945752"}},"outputId":"3e8db580-188f-49e5-fddc-2553706fb5a1"},"id":"QRnxIb6du6xN","execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy: 0.913375\n","Precision: 0.9571330117160579\n","Recall: 0.865943384461903\n","F1 Score: 0.9092575618698442\n","Confusion Matrix:\n","[[7670  311]\n"," [1075 6944]]\n"]}]},{"cell_type":"code","source":["import seaborn as sns\n","sns.heatmap(conf_matrix, annot=True, fmt='d', cmap='Blues', xticklabels=['Predicted Negative', 'Predicted Positive'], yticklabels=['Actual Negative', 'Actual Positive'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":448},"id":"wI37ncROvFf3","executionInfo":{"status":"ok","timestamp":1715667255453,"user_tz":-330,"elapsed":1182,"user":{"displayName":"Meghanath Reddy","userId":"06964579161220945752"}},"outputId":"7cdaa269-c04c-4d11-fe79-de3e7aff71e1"},"id":"wI37ncROvFf3","execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":23},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## ***Prediction***"],"metadata":{"id":"h2TXsY_lSrPt"},"id":"h2TXsY_lSrPt"},{"cell_type":"code","execution_count":34,"id":"hHzNh4HmXbZS","metadata":{"id":"hHzNh4HmXbZS","executionInfo":{"status":"ok","timestamp":1715667678243,"user_tz":-330,"elapsed":467,"user":{"displayName":"Meghanath Reddy","userId":"06964579161220945752"}}},"outputs":[],"source":["def predict_category(s, model=model):\n","    pred = model.predict([s])\n","    if(pred[0]==0):\n","        return \"Depressed\"\n","    else:\n","        return \"Not Depressed\""]},{"cell_type":"code","execution_count":35,"id":"j17LA-JPXbee","metadata":{"id":"j17LA-JPXbee","colab":{"base_uri":"https://localhost:8080/","height":38},"executionInfo":{"status":"ok","timestamp":1715667680603,"user_tz":-330,"elapsed":435,"user":{"displayName":"Meghanath Reddy","userId":"06964579161220945752"}},"outputId":"1d04ec16-3d71-4a9c-d7d0-449c5f5e2529"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Depressed'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":35}],"source":["predict_category(\"i wanna shot myself\")"]},{"cell_type":"code","execution_count":36,"id":"OwCJXqUCXbjf","metadata":{"id":"OwCJXqUCXbjf","colab":{"base_uri":"https://localhost:8080/","height":38},"executionInfo":{"status":"ok","timestamp":1715667682893,"user_tz":-330,"elapsed":644,"user":{"displayName":"Meghanath Reddy","userId":"06964579161220945752"}},"outputId":"c3e3973c-3002-4324-8e2b-a8f51a305f72"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Depressed'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":36}],"source":["predict_category(\"i will Kill you\")"]},{"cell_type":"code","source":["predict_category(\"i love my mom\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":38},"id":"pPoXvKI-LL0u","executionInfo":{"status":"ok","timestamp":1715667685320,"user_tz":-330,"elapsed":762,"user":{"displayName":"Meghanath Reddy","userId":"06964579161220945752"}},"outputId":"5b57d6f0-1fd0-48da-a00e-b1ec51ddb130"},"id":"pPoXvKI-LL0u","execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Not Depressed'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":37}]},{"cell_type":"code","execution_count":38,"id":"Go-E73uJXbpb","metadata":{"id":"Go-E73uJXbpb","colab":{"base_uri":"https://localhost:8080/","height":38},"executionInfo":{"status":"ok","timestamp":1715667686825,"user_tz":-330,"elapsed":3,"user":{"displayName":"Meghanath Reddy","userId":"06964579161220945752"}},"outputId":"28154e48-fb83-48e4-ae79-8e2be0c72fcf"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Not Depressed'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":38}],"source":["predict_category(\"I'm cute\")"]},{"cell_type":"code","execution_count":41,"id":"f2c84396","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":38},"id":"f2c84396","executionInfo":{"status":"ok","timestamp":1715667707511,"user_tz":-330,"elapsed":563,"user":{"displayName":"Meghanath Reddy","userId":"06964579161220945752"}},"outputId":"b9781833-0d7f-4c8c-e3b7-6005b37ed146"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Depressed'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":41}],"source":["predict_category(\"I hate my life\")"]},{"cell_type":"code","source":["predict_category(\"I'm excited\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":38},"id":"zeu_uw1knp_k","executionInfo":{"status":"ok","timestamp":1715667710779,"user_tz":-330,"elapsed":689,"user":{"displayName":"Meghanath Reddy","userId":"06964579161220945752"}},"outputId":"23ff5032-10f4-46fa-fb26-0a66d90888b8"},"id":"zeu_uw1knp_k","execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Not Depressed'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":42}]},{"cell_type":"code","execution_count":43,"id":"75306cc7","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":38},"id":"75306cc7","executionInfo":{"status":"ok","timestamp":1715667712197,"user_tz":-330,"elapsed":4,"user":{"displayName":"Meghanath Reddy","userId":"06964579161220945752"}},"outputId":"f10a0a42-067d-427d-8549-12ffeb63b40d"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Depressed'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":43}],"source":["predict_category(\"sad rightnow\")"]},{"cell_type":"code","source":["predict_category(\"How are you\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":38},"id":"xRu8cow2w8Be","executionInfo":{"status":"ok","timestamp":1715667726854,"user_tz":-330,"elapsed":440,"user":{"displayName":"Meghanath Reddy","userId":"06964579161220945752"}},"outputId":"04502cf5-9f70-407e-8e50-ef7689025596"},"id":"xRu8cow2w8Be","execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Not Depressed'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["predict_category(\"I am fine\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":38},"id":"ZZVXikOCw_uW","executionInfo":{"status":"ok","timestamp":1715667740812,"user_tz":-330,"elapsed":495,"user":{"displayName":"Meghanath Reddy","userId":"06964579161220945752"}},"outputId":"628531f6-1dbf-4264-f55f-17e8b18ac6b0"},"id":"ZZVXikOCw_uW","execution_count":45,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Not Depressed'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":45}]},{"cell_type":"code","source":["predict_category(\"alone and helpless\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":38},"id":"TrV9Pr06xDHW","executionInfo":{"status":"ok","timestamp":1715667760583,"user_tz":-330,"elapsed":429,"user":{"displayName":"Meghanath Reddy","userId":"06964579161220945752"}},"outputId":"4c063881-8acf-4906-faab-63f4da35d704"},"id":"TrV9Pr06xDHW","execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'Depressed'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":46}]},{"cell_type":"markdown","source":["## ***Depression detection has several applications across various fields:***"],"metadata":{"id":"GerN1Vs20miH"},"id":"GerN1Vs20miH"},{"cell_type":"markdown","source":["1. **Healthcare:**Identifying individuals at risk for depression allows for early intervention and personalized treatment plans.\n","2. **Mental Health Services:**Improving access to mental health support by automating screening and monitoring processes.\n","3. **Research:** Studying patterns and risk factors associated with depression for better understanding and development of effective interventions.\n","4. **Employment:** Supporting employee well-being by detecting signs of depression and providing appropriate resources.\n","5. **Education:** Identifying students who may be struggling with depression and offering targeted support within educational settings.\n","6. **Technology:** Integrating depression detection into digital platforms, such as social media or wearable devices, for continuous monitoring and intervention."],"metadata":{"id":"d-WY4k9c0ozg"},"id":"d-WY4k9c0ozg"}],"metadata":{"colab":{"provenance":[]},"kernelspec":{"display_name":"Python 3 (ipykernel)","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.11.1"}},"nbformat":4,"nbformat_minor":5}